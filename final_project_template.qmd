---
title: "Genetic and Environmental Factors Shaping Height and Weight: A Study of Twins and Adoption"
subtitle: "BMIN503/EPID600 Final Project"
author: "ZI WANG"
format: html
editor: visual
number-sections: true
embed-resources: true
execute: 
  warning: false
---

------------------------------------------------------------------------

## Overview {#sec-overview}

Studying both biological and virtual twins can provide comprehensive insights into the influences of genetics and environment. Biological twins help emphasize the impact of genetic factors, whereas virtual twins highlight the role of shared early-life environmental factors. The main objective of this twin and adoption study is to distinguish the contribution of nature in influencing variations in weight and height from birth through late age, as opposed to nurture.

## Introduction {#sec-introduction}

There is no doubt that genetic and environmental factors significantly impact early childhood growth and development. However, much debate has concerned the dominant influence of nature or nurture. Twin and adoption studies have been widely employed by researchers to assess differences within study pairs and estimate the contributions of genetic and environmental factors to various traits and behaviors. The twin design has relied on the assumption that identical and fraternal twin pairs share equally similar environments, accounting for their genetic similarity. In contrast, the adoption design's assumption is grounded in whether the two virtual twins, raised together since infancy but not sharing many genes, exhibit traits and behaviors resembling their biological parents in the adoptive family. Complex interactions and correlations exist among genetic, prenatal environmental, and postnatal environmental influences, leading to a range of health-related outcomes. In this study, we aim to evaluate whether genetics or the shared environment significantly influences the variations in height and weight among pairs of twins, siblings, and adoptees.

Human growth is a complex process that is not well-understood. This complex question requires insights from various fields. In the scientific area, geneticists start searching for the specific genes that affect height and weight the most. Meanwhile, nutrition experts bring in their expertise to exploring how their diets shape these physical characteristics. Epidemiologists shift their concerns to figure out how common certain height and weight traits are and what factors are more likely to contribute to these differences, while biostatisticians step into analyzing datasets and quantifying the relative contributions of genetics and environment to variations in individual characteristics. These fields will share their own piece to the puzzle to understanding the interfaces of nature and nurture in children's early years of growth and development.

## Methods {#sec-methods}

Using a mixture of real-world data and simulated data, this preliminary study was prepared to assess the relative importance of genetic and environmental effects on variations of height and weight. We studied samples of twins and adoptees, in a total of 1098 individuals. The samples consisted of 168 pairs of monozygotic (identical) twins, 169 pairs of dizygotic (fraternal) twins, and 139 of virtual twins (at lease one adoptee). Additionally, 73 of full sibling pairs are also involved. Our primary outcomes are height (**HT1** & **HT2**) and weight (**WT1** & **WT2**) of child 1 and 2 in each pair. Our primary exposures are birth height (**BirLenth**) and weight (**BWOZ**) of each individual. There are other factors were also considered, including age, sex and zygosity. Descriptive summary statistics of the raw data set by birth order **BO** is demonstrated in following Table 1.

### 1. Data Exploration and Preparation

#### 1.1 Load the necessary R packages:

```{r}
library(dplyr)
library(epiDisplay)
library(tidyverse)
library(ggplot2)
library(vtable)
library(mice)
library(missForest)
library(grid)
library(gridExtra)
library(cowplot)
library(gtsummary)
library(nlme)
library(rstatix)
library(hrbrthemes)

# Function for corr test & plot
corrplot2 <- function(data,
                      method = "pearson",
                      sig.level = 0.05,
                      order = "original",
                      diag = FALSE,
                      type = "upper",
                      tl.srt = 90,
                      number.font = 1,
                      number.cex = 1,
                      mar = c(0, 0, 0, 0)) {
  library(corrplot)
  data_incomplete <- data
  data <- data[complete.cases(data), ]
  mat <- cor(data, method = method)
  cor.mtest <- function(mat, method) {
    mat <- as.matrix(mat)
    n <- ncol(mat)
    p.mat <- matrix(NA, n, n)
    diag(p.mat) <- 0
    for (i in 1:(n - 1)) {
      for (j in (i + 1):n) {
        tmp <- cor.test(mat[, i], mat[, j], method = method)
        p.mat[i, j] <- p.mat[j, i] <- tmp$p.value
      }
    }
    colnames(p.mat) <- rownames(p.mat) <- colnames(mat)
    p.mat
  }
  p.mat <- cor.mtest(data, method = method)
  col <- colorRampPalette(c("#BB4444", "#EE9988", "#FFFFFF", "#77AADD", "#4477AA"))
  corrplot(mat,
           method = "color", col = col(200), number.font = number.font,
           mar = mar, number.cex = number.cex,
           type = type, order = order,
           addCoef.col = "black", # add correlation coefficient
           tl.col = "black", tl.srt = tl.srt, # rotation of text labels
           # combine with significance level
           p.mat = p.mat, sig.level = sig.level, insig = "blank",
           # hide correlation coefficients on the diagonal
           diag = diag
  )
}

```

#### 1.2 Load and explore the dataset:

```{r}
## read in dataset
#list.files("/Users/ziwang89/dropbox/penn_phd/BMIN503:EPID600_2023FALL/final project/")
Twin_dat <- read.table("/Users/ziwang89/dropbox/penn_phd/BMIN503:EPID600_2023FALL/final project/Data_Twin_Study.txt", header = T, sep = "")

#check the dim of the twin data set
dim(Twin_dat)

#list the length of unique twin pairs based on ID number (IDNO)
length(unique(Twin_dat$IDNO))

#check whether there exists pairs of triple twins babies or cases of mislabeling
Twin_dat %>% count(IDNO) %>% filter( n != 2 )

#generate a table of Birth Order 
table(Twin_dat$BO)
#access the row with a wrong Birth Order label
Twin_dat %>% group_by(IDNO) %>% count(BO) %>% filter( n != 1 )
(Twin_dat[Twin_dat$IDNO == 467,])
Twin_dat[917,]

#correct the wrong Birth Order label
Twin_dat$BO[917] = 1
#check the correction
(Twin_dat[Twin_dat$IDNO == 467,])

#pre-view the data set
head(Twin_dat,10)

# Descriptive summary statistics of the raw data set by birth order 
Twin_dat |> tbl_summary(by = BO) |> add_overall() |> add_n() |> bold_labels()

```

By digging into the data set, we observed an overlap of information between variables. There are two rows of each study pair, and the variable **BO** indicates the Birth Order. However, in the column of the variable **HT1**, it not only lists the height of child 1 as defined but also includes the height of child 2 in the second row of each pair, same as the column of the variable **WT1**. Thus, we regenerated our primary outcomes as below and created a sub-dataset of the twin data.

```{r}
# check the distribution of the main outcomes
summary(Twin_dat$HT1[Twin_dat$BO==2])
length(Twin_dat$HT1[Twin_dat$BO==2])
summary(Twin_dat$HT2[Twin_dat$BO==1])
length(Twin_dat$HT2[Twin_dat$BO==1])

# check if two cells of the same pair have a one-to-one relationship
Twin_dat <- Twin_dat |> group_by(IDNO) |> mutate(check.HT = ifelse( HT1[BO==2] == HT2[BO==1],1,0 ),
                                                 check.WT = ifelse( WT1[BO==2] == WT2[BO==1],1,0 )) 

# list the odds 
Twin_dat |> filter(check.HT==0 | check.WT==0)

# combine the information of four potential outcomes to create new accurate outcomes for each pair
Twin_dat <- Twin_dat |> group_by(IDNO) |> mutate(
  HT = case_when(
    BO == 1 ~ HT1[BO==1],
    BO == 2 ~ HT2[BO==1]
  ),
   WT = case_when(
    BO == 1 ~ WT1[BO==1],
    BO == 2 ~ WT2[BO==1]
  ),
)

# check the new outcomes
head(Twin_dat[,c("IDNO","BO","HT1","HT2","HT",
                    "WT1","WT2","WT")])

# pull a new sub data set for further analysis
#names(Twin_dat)
TwinData <- Twin_dat |> dplyr::select(IDNO,BO,Zyg,Sex,Race,
                                      AgeMon,BWOZ,BirLenth,
                                      HT,WT)

```

### 2. Descriptive Analysis

#### 2.1 Descriptive statistics of the sub twin data set:

Together, 61.38% participants included in the current study are biological twins. We also categorized subjects into Infancy (age 0-1.99), Childhood (age 2-11.99), Adolescence (age 12â€“17.99) or Adulthood groups (age 18 and above) based on their age by month. The sample was 87.34% children ranged in age from 2 to 12 years old (median age = 8.70 with IQR [7.15, 10.33]) and 48.45% male. Main measurements and baseline characteristics of the 1098 subjects are demonstrated in following summary tables and figure. 

```{r}
## to change data type based on given variables 
#names(TwinData)

TwinData$BO <- factor(TwinData$BO,levels = c(1,2))
TwinData$Zyg <- factor(TwinData$Zyg,levels = c(1,2,3,4,5))
TwinData$Sex <- factor(TwinData$Sex,levels = c(1,2))
TwinData$Race <- factor(TwinData$Race,levels = c(1,2,3,4,5,6,7,8,9,0))

# Create two new age related variables using AgeMon: Age by year, Lifespan Stages
TwinData <- TwinData |> mutate(AgeYEAR = round(AgeMon/12,2),
                                  LifespanStages = case_when(
                                    AgeYEAR < 2 ~ "Infancy",
                                    AgeYEAR >=2 & AgeYEAR < 12 ~ "Childhood",
                                    AgeYEAR >=12 & AgeYEAR < 18 ~ "Adolescence",
                                    AgeYEAR >=18  ~ "Adulthood"
                                  ))

TwinData$LifespanStages <- factor(TwinData$LifespanStages, levels = c("Infancy","Childhood","Adolescence","Adulthood"))
TwinData$AgeMon <- as.numeric(TwinData$AgeMon )

## to generate a descriptive statistics table of the raw twins dataset by Birth Order / Sex
TwinData |> tbl_summary(by = BO) |> add_p()|> bold_labels()

TwinData |> tbl_summary(by = Sex) |> add_p()|> bold_labels()


## to generate a proportional stacked bar graph of the types of zogosity by Sex 
ggplot(TwinData,aes(x = Zyg, y = ..prop.., fill =Sex, group = Sex)) +
  geom_bar() +
  geom_label(aes(label = ..count..), position = position_stack(vjust = 0.5), 
             stat = "count", 
            colour = "white")+
  scale_fill_discrete(name = "Sex", labels = c("Male", "Female")) +
  scale_x_discrete(name="Zygosity",
                   labels=c("1" = "1\nMonozygotic", "2" = "2\nDizygotic", "3" = "3\nTwo Adoptees",
                            "4"="4\n1 Adoptee, \n1 Biological Child","5"="5\nTwo Siblings"))  +
  scale_y_continuous(labels = scales::percent) +
    theme_ipsum() 

```

#### 2.2 Descriptive statistics of missing values:

Participants were considered to be excluded from this sample if: (a) they had missing data on their birth weight or/and birth height, or (b) if were missing outcome measurement data in weight or/and height. Exclusion of the individuals with missing/unknown race (6 out of 1098) did not affect much on the overall sample mean for height and weight. The subjects (413 out of 1098) with missing data on both baseline measurements at birth were pulled out from the sub twin data.

```{r}
## to count the number of missingness for each variables contained missingness
### for main outcomes
length(TwinData$IDNO[TwinData$HT==99.99]) #7
length(TwinData$IDNO[TwinData$WT==999.99]) #29


### for main predictors 
##### **BWOZ** Birth Weight in ounces Missing = 999.00
length(TwinData$IDNO[TwinData$BWOZ==999.00]) #413
##### **BirLenth** Birth Length in inches Missing = 99.90
length(TwinData$IDNO[TwinData$BirLenth==99.90]) #494
##### race
length(TwinData$IDNO[TwinData$Race==0]) #6

length(TwinData$IDNO[TwinData$BirLenth==99.90 & TwinData$BWOZ==999.00]) #413

## to generate a sub data set stored information of all subjects with missing both main predictors
Twin_missBirthInfo <- TwinData |> filter( BWOZ == 999.00 &
                                      BirLenth == 99.90 )

Twin_missBirthInfo |> dplyr::select(Zyg,BO) |> tbl_summary(by = BO) |> add_overall() |> add_n() |> bold_labels()

dim(Twin_missBirthInfo)
#413
```

#### 2.3 Preliminary Data visualization:

##### for categorical variables

Considering the relatively high percentage of missing data for the primary predictors, we explored a sub-dataset of participants with high data completeness. Then, we visualized the distributions based on different categorical variables to select a suitable cohort for subgroup analysis.

According to the Data Dictionary, **Zyg** (Zygosity): 1=MZ 2=DZ 3=VT (2 adoptees) 4=VT (1 adoptee, 1 biological child) 5=Full sibs

**Sex** 1 = Male, 2 = Female

**Race** 1=African-American, 2=American Indian/Alaska Native 3=Asian 4=Native Hawaiian/pacific Islander 5=White 6=Hispanic 7=South American Indian 8 = Mixed 9 = Other 0 = Missing

```{r}
## to generate a sub data set filtered by data quality of height and weight at birth
Twin_subdat <- TwinData |> filter(!(IDNO %in% Twin_missBirthInfo$IDNO)) |> group_by(IDNO) |> filter(n()==2)

dim(Twin_subdat)
length(unique(Twin_subdat$IDNO)) # 341 pairs -- 682 subjects

# to compare the distribution for Zygosity groups. 
# the frequency table of Zygosity Groups
### for the full data set
tab1(TwinData$Zyg,
  main="Distribution of Zygosity Groups in full data set")
### for the sub data set
tab1(Twin_subdat$Zyg,
  main="Distribution of Zygosity Groups in sub data set")

# to compare the distribution of race groups. 
### for the full data set
tab1(TwinData$Race,
  main="Distribution of Race Groups in full data set")
### for the sub data set
tab1(Twin_subdat$Race,
  main="Distribution of Race Groups in sub data set")
```

The primary baseline predictors in our dataset exhibit a notable issue of missing value. Accordingly, there are 413 subjects who are missing both birth weight and birth length, which is 37.6% of our overall study cohort. Consequently, we decided to separate our analyses into two parts to ensure the robustness. Our primary endpoint will be the height and weight variation among all biological and virtual twins, excluding the height and weight at birth; whereas, our secondary endpoint will focus on the variation among biological twins only. 

### 3. Primary Analysis

#### 3.1 Data Preparation and Imputation for Missing Data

In primary study, we investigated variations in height and weight among all sampled pairs, using basic demographic characteristics only. Our objective is to develop an optimal multivariate model that accurately quantifies the influencing factors contributing to variability in height and weight.

First of all, we adopted two popular imputation approaches, missForest and Lasso linear regression, to fill in missing data in other covariates of interest. The imputed variable distributions generated by the more proper strategy were then applied to handle missing data.

```{r}
#names(TwinData)
#View(Twin_dat)
#dim(TwinData)

summary(Twin_subdat)
dim(Twin_subdat)

dim(TwinData)

## to create new variables for further analysis and missing imputation
primary_dat <- TwinData |> mutate(## variables created below are for missing imputation
                               HT_imp = if_else(HT != 99.99,HT, NA_integer_),
                               WT_imp = if_else(WT != 999.99,WT,NA_integer_)) |> as.data.frame()
primary_dat$HT <- as.numeric(primary_dat$HT)
primary_dat$WT <- as.numeric(primary_dat$WT)
primary_dat$HT_imp <- as.numeric(primary_dat$HT_imp)
primary_dat$WT_imp <- as.numeric(primary_dat$WT_imp)


imput_numeric <- primary_dat %>%
  select(HT_imp, WT_imp, AgeMon, Zyg, Sex,Race)

## to impute missing values using missForest & lasso.norm: Lasso linear regression.
imput_numeric <- imput_numeric |> ungroup() |> dplyr::mutate(
  HT_missForest = missForest(imput_numeric)$ximp$HT_imp,
  WT_missForest = missForest(imput_numeric)$ximp$WT_imp,
  HT_lasso = complete(mice(imput_numeric, method = "lasso.norm"))$HT_imp,
  WT_lasso = complete(mice(imput_numeric, method = "lasso.norm"))$WT_imp
)

summary(imput_numeric)

####### Height
HT.P <- ggplot(imput_numeric, aes(x = HT_imp)) +
  geom_histogram(fill = "#ad1538", color = "#000000", position = "identity") +
  labs(x ="Height (inches)") + 
  ggtitle("Original Distribution of Height") +
  theme_classic()

HTimp.missForest <- ggplot(imput_numeric, aes(x = HT_missForest)) +
  geom_histogram(fill = "#1543ad", color = "#000000", position = "identity") +
  labs(x ="Height (inches)") + 
  ggtitle("MissForest-imputed Distribution of Height") +
  theme_classic()

HTimp.lasso <- ggplot(imput_numeric, aes(x = HT_lasso)) +
  geom_histogram(fill = "#1543ad", color = "#000000", position = "identity") +
  labs(x ="Height (inches)") + 
  ggtitle("Lasso-imputed Distribution of Height") +
  theme_classic()

####### Weight
WT.P <- ggplot(imput_numeric, aes(x = WT_imp)) +
  geom_histogram(fill = "#ad1538", color = "#000000", position = "identity") +
  labs(x ="Weight (pounds)") +
  ggtitle("Original Distribution of Weight") +
  theme_classic()

WTimp.missForest <- ggplot(imput_numeric, aes(x = WT_missForest)) +
  geom_histogram(fill = "#1543ad", color = "#000000", position = "identity") +
  labs(x ="Weight (pounds)") +
  ggtitle("MissForest-imputed Distribution of Weight") +
  theme_classic()

WTimp.lasso <- ggplot(imput_numeric, aes(x = WT_lasso)) +
  geom_histogram(fill = "#1543ad", color = "#000000", position = "identity") +
  labs(x ="Weight (pounds)") +
  ggtitle("Lasso-imputed Distribution of Weight") +
  theme_classic()


plot_grid(HT.P, WT.P,
          HTimp.missForest,WTimp.missForest,
          HTimp.lasso,WTimp.lasso,
          nrow = 3, ncol = 2)

# to generate a descriptive statistics table of the raw twins dataset
imput_numeric |> dplyr::select(HT_imp,HT_missForest,HT_lasso,
                             WT_imp,WT_missForest,WT_lasso) |> tbl_summary()

# final primary outcomes
primary_dat$HT_lasso <- imput_numeric$HT_lasso
primary_dat$WT_lasso <- imput_numeric$WT_lasso
```

The Miss Forest imputation technique is based on the Random Forest algorithm. As a non-parametric imputation method, it estimates the function in a way that's closest to the data points without any assumptions about the function form. On the other hand, MICE stands for Multivariate Imputation via Chained Equations, and it's one of the most common packages for R users. Lasso linear regression method from mice package is applied here.Take a look at the variable distribution changes by summary table and a grid of histograms, we know the imputed variables are in a good shape. The imputed distributions overall look much closer to the original one. The lasso-imputed height and weight distributions look the closest. Next, we will construct the univariate and multivariate analyses.

#### 3.2 Primary Data Visualization

Let's visualize the distribution for each Zygosity subgroup by gender after imputation.

```{r}
primary_dat |> dplyr::select(Zyg,Sex) |> tbl_summary(by = Sex) |> add_overall() |> add_n() |> bold_labels()

# proportions in Zygosity groups by Gender 
ggplot(primary_dat,aes(x = Zyg, y = ..prop.., fill =Sex, group = Sex)) +
  geom_bar() +
  geom_label(aes(label = ..count..), position = position_stack(vjust = 0.5), 
             stat = "count", 
            colour = "white")+
  scale_fill_discrete(name = "Sex", labels = c("Female", "Male")) +
  scale_x_discrete(name="Zygosity",
                   labels=c("1" = "1\nMonozygotic", "2" = "2\nDizygotic", "3" = "3\nTwo Adoptees",
                            "4"="4\n1 Adoptee, \n1 Biological Child","5"="5\nTwo Siblings"))  +
  scale_y_continuous(labels = scales::percent) +
    theme_ipsum() 


# proportions in Zygosity groups by Gender 
ggplot(primary_dat, aes(fill=Sex, y = ..prop.., x=Zyg)) + 
    #geom_bar(position="stack", stat="identity") +
    geom_bar(aes( y=..count../tapply(..count.., ..x.. ,sum)[..x..]), position="dodge" ) +
    geom_text(aes( y=..count../tapply(..count.., ..x.. ,sum)[..x..], label=scales::percent(..count../tapply(..count.., ..x.. ,sum)[..x..]) ),
            stat="count", position=position_dodge(0.9), vjust=-0.5)+
    ylab('Percent of Gender Group, %') +
  scale_fill_discrete(name = "Sex", labels = c("Female", "Male")) +
  scale_x_discrete(name="Zygosity",
                   labels=c("1" = "1\nMonozygotic", "2" = "2\nDizygotic", "3" = "3\nTwo Adoptees",
                            "4"="4\n1 Adoptee, \n1 Biological Child","5"="5\nTwo Siblings"))  +
  scale_y_continuous(labels = scales::percent) +
    theme_classic()


```

##### for outcomes

```{r}
####################################
### for Height in inches
####################################
# Normal curve
fun <- dnorm(primary_dat$HT_lasso, mean = mean(primary_dat$HT_lasso), 
             sd = sd(primary_dat$HT_lasso))
max(fun)

par(mfrow = c(1, 1))
# Histogram
hist(primary_dat$HT_lasso, 
     probability = TRUE, xlab = expression("Height (inches)"), col = "grey", #ylim = c(0, max(fun)+0.01),
     axes = FALSE, 
     main =  expression("Distribution of Height"))
# Axis
axis(1)
# Density
lines(density(primary_dat$HT_lasso), col = "red", lwd = 2)
# Add boxplot
par(new =TRUE)
boxplot(primary_dat$HT_lasso, horizontal = TRUE, 
        axes = FALSE, 
        #ylim = c(-20,65),
        boxlwd = 1, outwex = 0.5, boxwex = 0.2,
        lwd = 2, col = rgb(0, 1, 1, alpha = 0.15)
)
stripchart(primary_dat$HT_lasso,              # Data
           #method = "jitter", # Random noise
           pch = 18,          # Pch symbols
           col = 4,           # Color of the symbol
           # vertical = TRUE,   # Vertical mode
           add = TRUE) 


####################################
### for Weight in pounds
####################################
# Normal curve
fun <- dnorm(primary_dat$WT_lasso, mean = mean(primary_dat$WT_lasso), sd = sd(primary_dat$WT_lasso))
max(fun)

par(mfrow = c(1, 1))
# Histogram
hist(primary_dat$WT_lasso, probability = TRUE, xlab = expression("Weight (pounds)"), col = "grey", ylim = c(0, max(fun)+0.006),
     axes = FALSE, 
     main =  expression("Distribution of Weight"))
# Axis
axis(1)
# Density
lines(density(primary_dat$WT_lasso), col = "red", lwd = 2)
# Add boxplot
par(new =TRUE)
boxplot(primary_dat$WT_lasso, horizontal = TRUE, 
        axes = FALSE, 
        #ylim = c(-20,65),
        boxlwd = 1, outwex = 0.5, boxwex = 0.2,
        lwd = 2, col = rgb(0, 1, 1, alpha = 0.15)
)
stripchart(primary_dat$WT_lasso,              # Data
           #method = "jitter", # Random noise
           pch = 18,          # Pch symbols
           col = 4,           # Color of the symbol
           # vertical = TRUE,   # Vertical mode
           add = TRUE) 

```

#### 3.3 Univariate analysis

We constructed a univariate regression model to screen candidate predictors for our primary outcomes. Variables with a significance level of p < 0.10 were included in a multivariable GLMM model. Generalized linear mixed models allow heterogeneity across sampled pairs. Therefore, we applied GLMMs in the study to evaluate the association between outcomes and selected predictors. Finally, we used AIC to evaluate and determine the best working predictor structure for the final model. 

```{r}
## get the variable list for testing
#names(primary_dat)
var.list <- colnames(primary_dat)
var.list <- var.list[-c(1,2,7:11,13:16)]

## test the model setting, with or without a random effect 
i=4
mod <- as.formula(sprintf("HT_lasso ~ %s ", var.list[i]))

# compare a model with no random effects to a model with a random effect 
## with a random effect 
mod.RE = lme(mod,method="ML",na.action=na.omit,
    random = ~1 |IDNO,  control = lmeControl(opt = 'optim'),
                 data = primary_dat)
## without  a random effect 
mod = lm(mod,primary_dat)

## AIC test for model selection
bbmle::AICtab(mod.RE,mod) # lower AIC it is considered significantly better than that model.


######### 
# for loop for table Automation
#########
# create a empty output table to store results
result_tab <- data.frame(V1 = character(),
                         V2 = character(),
                         V3 = numeric(),
                         V4 = numeric())
names(result_tab)[names(result_tab)=='V1']='Outcome'
names(result_tab)[names(result_tab)=='V2']='Varible'
names(result_tab)[names(result_tab)=='V3']='Estimate'
names(result_tab)[names(result_tab)=='V4']='p-Value'
#result_tab 


# for loop for outcome HT_lasso
for(i in 1:length(var.list)) {
  # step 1: define model formula
  mod <- as.formula(sprintf("HT_lasso ~ %s ", var.list[i])) # %s would be replaced by the variable name, 
  
  # step 2: run model
  mod.RE = lme(mod,method="ML",na.action=na.omit, 
               random = ~1 |IDNO,  control = lmeControl(opt = 'optim'),data = primary_dat)
  
  # step 3: summarize model result
  fit_result <- round(summary(mod.RE)$tTable,3) |> as.data.frame() |> add_column(
  Outcome = noquote("HT_lasso"),
  Varible = noquote(var.list[i]), .before = "Value") |> dplyr::select(-c(`Std.Error`,`DF`,`t-value`)) |>
  dplyr::rename("Estimate" = "Value") |> slice(-1)

  
  # step 4: append the model result to the final result table
  result_tab  <- rbind(result_tab,fit_result)
}

# for loop for outcome WT_lasso
for(i in 1:length(var.list)) {
  # step 1: define model formula
  mod <- as.formula(sprintf("WT_lasso ~ %s ", var.list[i])) # %s would be replaced by the variable name, 
  
  # step 2: run model
  mod.RE = lme(mod,method="ML",na.action=na.omit, 
               random = ~1 |IDNO,  control = lmeControl(opt = 'optim'),data = primary_dat)
  
  # step 3: summarize model result
  fit_result <- round(summary(mod.RE)$tTable,3) |> as.data.frame() |> add_column(
  Outcome = noquote("WT_lasso"),
  Varible = noquote(var.list[i]), .before = "Value") |> dplyr::select(-c(`Std.Error`,`DF`,`t-value`)) |>
  dplyr::rename("Estimate" = "Value") |> slice(-1)

  
  # step 4: append the model result to the final result table
  result_tab  <- rbind(result_tab,fit_result)
}

# check the final result table
(result_tab)

```

The clear association of Zygosity groups and Age by month on both height and weight, appears in above univariate result table. Sex with a p-value 0.028 is also significant for height.

#### 3.4 Multivariate analysis

##### Model for Height

```{r}
mod.height1 = lme(HT_lasso ~ Zyg + AgeMon  ,method="ML",na.action=na.omit, 
               random = ~1 |IDNO,  control = lmeControl(opt = 'optim'),data = primary_dat)

mod.height2 = lme(HT_lasso ~ Zyg + Sex + AgeMon  ,method="ML",na.action=na.omit, 
               random = ~1 |IDNO,  control = lmeControl(opt = 'optim'),data = primary_dat)
  
round(summary(mod.height1)$tTable,3) 
round(summary(mod.height2)$tTable,3) 

## AIC test for model selection
bbmle::AICtab(mod.height1,mod.height2) 

```

##### Model for Weight

```{r}
mod.weight1 = lme(WT_lasso ~ Zyg + AgeMon ,method="ML",na.action=na.omit, 
               random = ~1 |IDNO,  control = lmeControl(opt = 'optim'),data = primary_dat)
mod.weight2 = lme(WT_lasso ~ Zyg + Sex + AgeMon ,method="ML",na.action=na.omit, 
               random = ~1 |IDNO,  control = lmeControl(opt = 'optim'),data = primary_dat)
 
round(summary(mod.weight1)$tTable,3) 
round(summary(mod.weight2)$tTable,3) 

## AIC test for model selection
bbmle::AICtab(mod.weight1,mod.weight2) 

```

#### 3.5 Primary Analysis Results

Lasso-imputed height in inches in this primary dataset ranged from 36.00 to 74.25, with median 52.00 [IRQs 47.75, 56.50], while Lasso-imputed weight in pounds ranged from 28.00 to 250.00, with median 62.00 [IRQs 49.00, 79.88]. Age in month ranged from 47.17 to 666.07, with median 104.37 [IRQs 85.80, 124.00], indicating 959 children, 119 adolescences, and 20 adults. 532 males and 566 females are involved.

The final GLMM models for variability in height included zygosity, sex, and age in month, while the final model for variability in weight included zygosity and age in month only, suggesting that associations of these factors with weight vary over development. 


### 4. Subgroup Analysis

The majority missingness of the birth height and weight present in virtual twins and full siblings, resulting in a significant imbalance in cell sizes of Zygosity groups 3, 4, and 5. Therefore, the subgroup analysis focused on the growth variation among biological twins only, Zygosity groups 1 (monozygotic) and 2 (dizygotic). We followed the same procedure as the primary analysis to construct the final models for the subgroup analysis, taking into account the baseline measurements at birth.

#### 4.1 Data Preparation and Exploration

```{r}
#View(Twin_subdat)
###### recall
## to generate a sub data set filtered by data quality of height and weight at birth
#Twin_subdat <- TwinData |> filter(!(IDNO %in% Twin_missBirthInfo$IDNO)) |> group_by(IDNO) |> filter(n()==2)
Twin_subdat |> tbl_summary(by = BO) |> add_overall() |> add_n() |> bold_labels()
Twin_subdat |> dplyr::select(Zyg,BO) |> tbl_summary(by = BO) |> add_overall() |> add_n() |> bold_labels()

## to generate a sub data set including  MZ (monozygotic) & DZ (dizygotic) only
subgrp_data <- Twin_subdat |> filter(Zyg %in% c(1,2)) 

## to create new variables for further analysis and missing imputation
#. **BWOZ** Birth Weight in ounces Missing = 999.00
#. **BirLenth** Birth Length in inches Missing = 99.90

subgrp_data <- subgrp_data |> mutate(## variables created below are for missing imputation
                               HT_na = if_else(HT != 99.99,HT, NA_integer_),
                               WT_na = if_else(WT != 999.99,WT,NA_integer_),
                               BWOZ_na = if_else(BWOZ != 999.00,BWOZ, NA_integer_),
                               BirLenth_na = if_else(BirLenth != 99.90,BirLenth, NA_integer_),) |> as.data.frame()

#dim(primary_dat)
## to create descriptive table for the subgroup data set
subgrp_data |> tbl_summary(by = BO) |> add_overall() |> add_n() |> bold_labels() 


## to create a imputation subset
for_imput <- subgrp_data %>%
  select(HT_na, WT_na, 
         BWOZ_na, BirLenth_na,
         AgeMon,Zyg,Sex,Race)

## to impute missing values of Birth length using laso.norm: Lasso linear regression.
for_imput <- for_imput |> ungroup() |> dplyr::mutate(
  BirLenth_lasso = complete(mice(for_imput, method = "lasso.norm"))$BirLenth_na)


# to generate a descriptive statistics table of the sub dataset
for_imput |> dplyr::select(BirLenth_na,BirLenth_lasso) |> tbl_summary()

# final subgroup predictors
subgrp_data$BirLenth_lasso <- for_imput$BirLenth_lasso

# to revise descriptive table for the subgroup data set
subgrp_data |> tbl_summary(by = BO) |> add_overall() |> add_n() |> bold_labels() 


```

#### 4.2 Subgroup Data Visualization

```{r}
# proportions in Zygosity groups by Gender 
ggplot(subgrp_data,aes(x = Zyg, y = ..prop.., fill =Sex, group = Sex)) +
  geom_bar() +
  geom_label(aes(label = ..count..), position = position_stack(vjust = 0.5), 
             stat = "count", 
            colour = "white")+
  scale_fill_discrete(name = "Sex", labels = c("Female", "Male")) +
  scale_x_discrete(name="Zygosity",
                   labels=c("1" = "1\nMonozygotic", "2" = "2\nDizygotic", "3" = "3\nTwo Adoptees",
                            "4"="4\n1 Adoptee, \n1 Biological Child","5"="5\nTwo Siblings"))  +
  scale_y_continuous(labels = scales::percent) +
    theme_ipsum() 


# Plot outcome distributions
### by Sex
HT_Sex <- subgrp_data %>%
  ggplot(aes(x = HT_na,
             y = Sex,
             fill = Sex)) +
  ggtitle("Plot of Distribution of Height \nby Sex") +
  xlab("Height (inches)") +
  scale_fill_discrete(name = "Sex", labels = c("Male","Female")) +
  ggridges::geom_density_ridges(bandwidth = 4) + theme_ipsum() 


WT_Sex <- subgrp_data %>%
  ggplot(aes(x = WT_na,
             y = Sex,
             fill = Sex)) +
  ggtitle("Plot of Distribution of Weight \nby Sex") +
  xlab("Weight (pounds)") +
  scale_fill_discrete(name = "Sex", labels = c("Male","Female")) +
  ggridges::geom_density_ridges(bandwidth = 4) + theme_ipsum() 


### by Birth Order
HT_BO <- subgrp_data %>%
  ggplot(aes(x = HT_na,
             y = BO,
             fill = BO)) +
  ggtitle("Plot of Distribution of Height \nby Birth Order") +
  xlab("Height (inches)") +
  ylab("Birth Order") +
  scale_fill_discrete(name = "Birth Order", labels = c("Child 1", "Child 2")) +
  ggridges::geom_density_ridges(bandwidth = 4) + theme_ipsum() 


WT_BO <- subgrp_data %>%
  ggplot(aes(x = WT_na,
             y = BO,
             fill = BO)) +
  ggtitle("Plot of Distribution of Weight \nby Birth Order") +
  xlab("Weight (pounds)") +
  ylab("Birth Order") +
  scale_fill_discrete(name = "Birth Order", labels = c("Child 1", "Child 2")) +
  ggridges::geom_density_ridges(bandwidth = 4) + theme_ipsum() 



plot_grid(HT_Sex,WT_Sex,
          HT_BO,WT_BO,
          nrow = 2, ncol = 2)

```

In light of above data visualizations, we can conclude that the distributions of weight and height across both sex and birth order groups are fairly similar and likely not different between both sex and birth order groups. We could also statistically explore this using a suitable Wilcoxon test before performing the main group comparison.

```{r}
# Mann-Withney U test
## by SEX
subgrp_data %>%
  wilcox_test(HT_na ~ Sex,
              detailed = TRUE) %>%
  glimpse()

subgrp_data %>%
  wilcox_test(WT_na ~ Sex,
              detailed = TRUE) %>%
  glimpse()

# Mann-Withney U test
## by Birth Order
subgrp_data %>%
  wilcox_test(HT_na ~ BO,
              detailed = TRUE) %>%
  glimpse()

subgrp_data %>%
  wilcox_test(WT_na ~ BO,
              detailed = TRUE) %>%
  glimpse()
```

According to the P-values of each test, the test is not significant for neither of groups, Thus, the groups are considered to be not different.

#### 4.3 Pearson correlation matrix:

```{r}
#names(subgrp_data)

for_corr <- subgrp_data |> dplyr::select(BO,Zyg,Sex,Race,AgeMon,
                                         BWOZ,BirLenth_lasso) |>
  mutate_if(is.factor, as.numeric)

corrplot2(
  data = for_corr,
  method = "pearson",
  sig.level = 0.05,
  order = "original",
  diag = FALSE,
  type = "upper",
  tl.srt = 75
)
```

#### 4.4 Univariate Analysis

```{r}
## get the variable list for testing
#names(subgrp_data)
variable.list <- colnames(subgrp_data)
#variable.list
variable.list <- variable.list[-c(1,8:11,13:16)]

#variable.list
## test the model setting, with or without a random effect 
i=6
mod <- as.formula(sprintf("HT_na ~ %s ", variable.list[i]))

# compare a model with no random effects to a model with a random effect 
## with a random effect 
mod.RE = lme(mod,method="ML",na.action=na.omit,
    random = ~1 |IDNO,  control = lmeControl(opt = 'optim'),
                 data = subgrp_data)
## without  a random effect 
mod = lm(mod,subgrp_data)

## AIC test for model selection
bbmle::AICtab(mod.RE,mod) # lower AIC it is considered significantly better than that model.


######### 
# for loop for table Automation
#########
# create a empty output table to store results
subgrpresult_tab <- data.frame(V1 = character(),
                         V2 = character(),
                         V3 = numeric(),
                         V4 = numeric())
names(subgrpresult_tab)[names(subgrpresult_tab)=='V1']='Outcome'
names(subgrpresult_tab)[names(subgrpresult_tab)=='V2']='Varible'
names(subgrpresult_tab)[names(subgrpresult_tab)=='V3']='Estimate'
names(subgrpresult_tab)[names(subgrpresult_tab)=='V4']='p-Value'
#subgrpresult_tab 


# for loop for outcome HT_lasso
for(i in 1:length(variable.list)) {
  # step 1: define model formula
  mod <- as.formula(sprintf("HT_na ~ %s ", variable.list[i])) # %s would be replaced by the variable name, 
  
  # step 2: run model
  mod.RE = lme(mod,method="ML",na.action=na.omit, 
               random = ~1 |IDNO,  control = lmeControl(opt = 'optim'),data = subgrp_data)
  
  # step 3: summarize model result
  fit_result <- round(summary(mod.RE)$tTable,3) |> as.data.frame() |> add_column(
  Outcome = noquote("HT"),
  Varible = noquote(variable.list[i]), .before = "Value") |> dplyr::select(-c(`Std.Error`,`DF`,`t-value`)) |>
  dplyr::rename("Estimate" = "Value") |> slice(-1)

  
  # step 4: append the model result to the final result table
  subgrpresult_tab  <- rbind(subgrpresult_tab,fit_result)
}

# for loop for outcome WT_lasso
for(i in 1:length(variable.list)) {
  # step 1: define model formula
  mod <- as.formula(sprintf("WT_na ~ %s ", variable.list[i])) # %s would be replaced by the variable name, 
  
  # step 2: run model
  mod.RE = lme(mod,method="ML",na.action=na.omit, 
               random = ~1 |IDNO,  control = lmeControl(opt = 'optim'),data = subgrp_data)
  
  # step 3: summarize model result
  fit_result <- round(summary(mod.RE)$tTable,3) |> as.data.frame() |> add_column(
  Outcome = noquote("WT"),
  Varible = noquote(variable.list[i]), .before = "Value") |> dplyr::select(-c(`Std.Error`,`DF`,`t-value`)) |>
  dplyr::rename("Estimate" = "Value") |> slice(-1)

  
  # step 4: append the model result to the final result table
  subgrpresult_tab  <- rbind(subgrpresult_tab,fit_result)
}

# check the final result table

(subgrpresult_tab)

```

#### 4.5 Multivariate analysis

##### Model for Height

```{r}

subgrpmod.height1 = lme(HT_na~ Sex + AgeMon + BWOZ  ,method="ML",na.action=na.omit, 
               random = ~1 |IDNO,  control = lmeControl(opt = 'optim'),data = subgrp_data)

subgrpmod.height2 = lme(HT_na ~ Sex + AgeMon + BirLenth_lasso ,method="ML",na.action=na.omit, 
               random = ~1 |IDNO,  control = lmeControl(opt = 'optim'),data = subgrp_data)

subgrpmod.height3 = lme(HT_na ~ Sex + AgeMon + BirLenth_lasso:BWOZ ,method="ML",na.action=na.omit, 
               random = ~1 |IDNO,  control = lmeControl(opt = 'optim'),data = subgrp_data)

  
round(summary(subgrpmod.height1)$tTable,3) 
round(summary(subgrpmod.height2)$tTable,3) 
round(summary(subgrpmod.height3)$tTable,3) 

## AIC test for model selection
bbmle::AICtab(subgrpmod.height1,subgrpmod.height2) 
bbmle::AICtab(subgrpmod.height1,subgrpmod.height3) 
bbmle::AICtab(subgrpmod.height2,subgrpmod.height3) 
```

##### Model for Weight

```{r}
subgrpmod.weight1 = lme(HT_na~ AgeMon + BWOZ  ,method="ML",na.action=na.omit, 
               random = ~1 |IDNO,  control = lmeControl(opt = 'optim'),data = subgrp_data)

subgrpmod.weight2 = lme(HT_na ~ AgeMon + BirLenth_lasso ,method="ML",na.action=na.omit, 
               random = ~1 |IDNO,  control = lmeControl(opt = 'optim'),data = subgrp_data)

subgrpmod.weight3 = lme(HT_na ~ AgeMon + BirLenth_lasso:BWOZ ,method="ML",na.action=na.omit, 
               random = ~1 |IDNO,  control = lmeControl(opt = 'optim'),data = subgrp_data)

  
round(summary(subgrpmod.weight1)$tTable,3) 
round(summary(subgrpmod.weight2)$tTable,3) 
round(summary(subgrpmod.weight3)$tTable,3) 

## AIC test for model selection
bbmle::AICtab(subgrpmod.weight1,subgrpmod.weight2) 
bbmle::AICtab(subgrpmod.weight1,subgrpmod.weight3) 
bbmle::AICtab(subgrpmod.weight2,subgrpmod.weight3) 

```


#### 4.6 Subgroup Analysis Results

326 pairs of biological twins, 163 pairs of monozygotic and 163 pairs of dizygotic, were sampled from the original study cohort. 310 males and 342 females are involved. Height in inches in this subgroup dataset ranged from 42.00 to 70.75, with median 52.50 [IRQs 49.75, 56.50], while weight in pounds ranged from 33.00 to 171.00, with median 64.00 [IRQs 53.00, 80.00]. Age in month ranged from 61.37 to 278.97, with median 107.52 [IRQs 96.50, 122.07], indicating 570 children, 80 adolescences, and 2 adults. 

To mitigate multicollinearity among primary baseline predictors, we explored the interaction between birth height and weight. This approach resulted in our optimal model structure for height and weight. Besides age in month and interaction term of birth weight and height, sex was consistently included the final model of height.


## Results {#sec-results}

According to our primary and subgroup analyses above, the final models for influencing height and weight in all zygosity groups suggested zygosity, sex, and age in month as major factors, while the final model for variability in height and weight for biological twins included sex, age in month, and the interaction term of baseline measurements at birth, suggesting that associations of genetic factors with height and weight vary throughout growth, especially at an early age. Age in month was the only predictor retained in all final models, with p < 0.001. By comparing the similarity of monozygotic, dizygotic, and virtual twins, our results suggest that variability in both height and weight among twins and adoptees is strongly influenced by genetic factors in both sexes as early childhood, and increasingly through late adolescence. That is consistent with results from other twin studies.


## Conclusion and limitation

In short, twin and adoption studies are useful to disentangle the relative importance of environmental and genetic influences on individual growth and traits and will continue to do so. These study designs are able to separate the effects of genetics from the social environment. Our preliminary study of twin and adoption have provided valuable insights into the heritability of body growth. It give clues to the importance of biological environmental factors, in advancing our understanding of the complex interplay between nature and nurture in shaping individual differences. There is no doubt that genetic factors certainly build the inner foundation, but where and how a child is raised also play a crucial role of their early growth and development. Environmental factors, such as nutrition and physical activities, are related to health and performance and affect the development of weight for a longer period across a broad spectrum of life stages. The majority of our participants were white. The lack of ethnic diversity in our research participation is part of our limitations. Given the importance of healthy lifestyle choices, a crucial question arises about which factor is more likely to influence the direction of variations. Therefore, it is essential to include specific measurements of common environmental factors to thoroughly assess this multi-dimensional issue.

## References 

1. Prescott CA, Kendler KS. Twin Study Design. Alcohol Health Res World. 1995;19(3):200-205. PMID: 31798103; PMCID: PMC6875762.

2. Maes HH, Neale MC, Eaves LJ. Genetic and environmental factors in relative body weight and human adiposity. Behav Genet. 1997 Jul;27(4):325-51. doi: 10.1023/a:1025635913927. PMID: 9519560.

3. Boomsma, D., Busjahn, A. & Peltonen, L. Classical twin studies and beyond. Nat. Rev. Genet. 3, 872â€“882 (2002).

4. Vrieze SI, McGue M, Miller MB, Legrand LN, Schork NJ, Iacono WG. An assessment of the individual and collective effects of variants on height using twins and a developmentally informative study design. PLoS Genet. 2011 Dec;7(12):e1002413. doi: 10.1371/journal.pgen.1002413. Epub 2011 Dec 8. PMID: 22174699; PMCID: PMC3234218.

5. Brandkvist M, BjÃƒÂ¸rngaard J H, ÃƒËœdegÃƒÂ¥rd R A, Ãƒâ€¦svold B O, Sund E R, Vie G et al. Quantifying the impact of genes on body mass index during the obesity epidemic: longitudinal findings from the HUNT Study BMJ 2019; 366 :l4067 doi:10.1136/bmj.l4067



